package integerSums;
import javax.swing.JOptionPane; //Imports JOptionPane to allow use of popups
import java.util.ArrayList;     //Imports ArrayList to allow use of arrays for unknown lengths
/**
 *      File Name:  IntegerSums
 *  Programmed By:  Joseph Calarco
 * Programmed For:  Mr. Salavati
 *           Date:  17 Mar, 2019
 *    Description:  This application asks for user input into a textbox creating
 *                  a list of values, then allows the user to add or remove values
 *                  from the list. The user can then choose to display even, odd,
 *                  or all values from the list, and the sum of each of those sets.
 */

public class IntegerSums extends javax.swing.JFrame {
   
    //variable declarations
    int sum;                                            //The sum variable will hold the sum of the selected set of numbers
    
    //list declarations
    ArrayList<Integer> integerList = new ArrayList();   //An array list to hold input from the user, ArrayList because total length is unknown
    int [] intListPub = new int[integerList.size()];    //A list to store the values chosen the user to be evaluated and/or displayed
     
    /**
     * Creates new form IntegerSums
     */
    public IntegerSums() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpListSelect = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        panelInputs = new javax.swing.JPanel();
        lblInput = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        panelOutputs = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaLists = new javax.swing.JTextArea();
        btnSumAll = new javax.swing.JButton();
        btnSumEven = new javax.swing.JButton();
        btnSumOdd = new javax.swing.JButton();
        txtResult = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        rbtnAll = new javax.swing.JRadioButton();
        rbtnEven = new javax.swing.JRadioButton();
        rbtnOdd = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        btnCleaer = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuHelp = new javax.swing.JMenu();
        menuItemHowTo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Integer Sums");
        setResizable(false);

        lblTitle.setFont(new java.awt.Font("Lucida Bright", 3, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(43, 43, 117));
        lblTitle.setText("Integer Sums");

        lblInput.setText("Enter an Integer:");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInputsLayout = new javax.swing.GroupLayout(panelInputs);
        panelInputs.setLayout(panelInputsLayout);
        panelInputsLayout.setHorizontalGroup(
            panelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputsLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblInput)
                .addGap(18, 18, 18)
                .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelInputsLayout.setVerticalGroup(
            panelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInputsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInput)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd)
                    .addComponent(btnRemove))
                .addGap(7, 7, 7))
        );

        txtAreaLists.setEditable(false);
        txtAreaLists.setColumns(20);
        txtAreaLists.setRows(5);
        jScrollPane1.setViewportView(txtAreaLists);

        btnSumAll.setText("Sum All");
        btnSumAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumAllActionPerformed(evt);
            }
        });

        btnSumEven.setText("Sum Even");
        btnSumEven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumEvenActionPerformed(evt);
            }
        });

        btnSumOdd.setText("Sum Odd");
        btnSumOdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumOddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelOutputsLayout = new javax.swing.GroupLayout(panelOutputs);
        panelOutputs.setLayout(panelOutputsLayout);
        panelOutputsLayout.setHorizontalGroup(
            panelOutputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOutputsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelOutputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOutputsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panelOutputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSumEven, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSumOdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOutputsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSumAll, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
        panelOutputsLayout.setVerticalGroup(
            panelOutputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOutputsLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnSumAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSumEven)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSumOdd)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelOutputsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        txtResult.setEditable(false);

        grpListSelect.add(rbtnAll);
        rbtnAll.setText("All");
        rbtnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAllActionPerformed(evt);
            }
        });

        grpListSelect.add(rbtnEven);
        rbtnEven.setText("Even");
        rbtnEven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEvenActionPerformed(evt);
            }
        });

        grpListSelect.add(rbtnOdd);
        rbtnOdd.setText("Odd");
        rbtnOdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnOddActionPerformed(evt);
            }
        });

        jLabel1.setText("Choose Values to List:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnOdd)
                    .addComponent(rbtnAll)
                    .addComponent(rbtnEven))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(rbtnAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnEven)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnOdd)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnCleaer.setText("Clear");
        btnCleaer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleaerActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        menuHelp.setText("Help");

        menuItemHowTo.setText("How-To");
        menuItemHowTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemHowToActionPerformed(evt);
            }
        });
        menuHelp.add(menuItemHowTo);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtResult)
                            .addComponent(panelInputs, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(lblTitle)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelOutputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCleaer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelInputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelOutputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCleaer)
                    .addComponent(btnExit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Button to Add values to the list
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        if (txtInput.getText().isEmpty()){                                  //An if statement to determine if there is input from the user
            JOptionPane.showMessageDialog(null, "No value has been input"); //A popup to let the user know there was nothing input
        }else{                                                              //An else statement containing actions to do if there are values input
            txtAreaLists.setText("");                                       //Clears the area text box containing the list so that it wont add to the old display
            integerList.add(Integer.parseInt(txtInput.getText()));          //Adds the input from the user to the ArrayList containing all other values, first converting it to an integer
            int [] intList = new int[integerList.size()];                   //Creates a new integer array to hold values from the ArrayList
            
            for (int x = 0; x < integerList.size(); x++){                   //Iterates through the ArrayList adding each value to the new integer array
                intList[x] = integerList.get(x);
            }
        
            for (int i = 0; i < intList.length; i++) {                                              //Iterates through the integer array 
                txtAreaLists.setText(txtAreaLists.getText() + Integer.toString(intList[i]) + "\n"); //Displays the integers in the array on seperate lines in the area text box
            }
            intListPub = intList;                                                                   //makes the array formed equal to the integer array in the public class to be usable by other buttons
        }
        txtInput.setText("");                                                                       //Clears the input text box
        txtInput.requestFocus();                                                                    //Sets the focus of the keyboard to the input box so user can quickly add new value
        
    }//GEN-LAST:event_btnAddActionPerformed
    //Button to remove value from the list
    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        
        if (txtInput.getText().isEmpty()){                                  //An if statement to check if there is input from the user
            JOptionPane.showMessageDialog(null, "No value has been input"); //pop displayed if there is no user input
        }else{                                                              //else statement for if there is input
            integerList.remove(new Integer(txtInput.getText()));            //removes the integer that is equal to the input text from the list
            txtAreaLists.setText("");                                       //clears the area text box so that displayed list not duplicated
            int [] intList = new int[integerList.size()];                   //creates new integer array the size of the ArrayList

            for (int x = 0; x < integerList.size(); x++){                   //Loops through the integer array
                intList[x] = integerList.get(x);                            //Adds the value stored in each index in the ArrayList to the same index in the created integer array
            }
        
            for (int i = 0; i < intList.length; i++) {                                              //iterates through the integer array
                txtAreaLists.setText(txtAreaLists.getText() + Integer.toString(intList[i]) + "\n"); //converts the values in the integer array to a string and displays them on seperate lines in the area text box
            }
        
        }
        txtInput.setText("");                                                                       //clears the user input text field
        txtInput.requestFocus();                                                                    //sets keyboard focus on the input textbox
    }//GEN-LAST:event_btnRemoveActionPerformed
    //Radio button that displays all values
    private void rbtnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAllActionPerformed
        
        txtAreaLists.setText("");                                                               //Clears the previous display from the area text box so it doesn't duplicate
        int [] intList = new int[integerList.size()];                                           //Creates new integer array
        
        for (int x = 0; x < integerList.size(); x++){                                           //loops through integer array
            intList[x] = integerList.get(x);                                                    //adds each value from the ArrayList of values to the new integer array
        }
        
        for (int i = 0; i < intList.length; i++) {                                              //loops through the new integer array
            txtAreaLists.setText(txtAreaLists.getText() + Integer.toString(intList[i]) + "\n"); //Converts each value in the integer array to a string and displays it in the area text box on seperate lines
        }
    }//GEN-LAST:event_rbtnAllActionPerformed
    //Radio button that displays all even numbers
    private void rbtnEvenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEvenActionPerformed
 
        txtAreaLists.setText("");                                                                       //Clears the area text box
        int [] intListEven = new int[integerList.size()];                                               //creates new integer array to store even numbers
        
        for (int x = 0; x < integerList.size(); x++){                                                   //iterates over the arrays
            if (integerList.get(x) % 2 == 0){                                                           //checks if the user input value in the ArrayList is an even number by checking if remainder is 0 when divided by 2
                intListEven[x] = integerList.get(x);                                                    //Adds the even values from the ArrayList to the even number integer array
                txtAreaLists.setText(txtAreaLists.getText() + Integer.toString(intListEven[x]) + "\n"); //displays the values of the integer array in the area text box on seperate lines
            }
        }
    }//GEN-LAST:event_rbtnEvenActionPerformed
    //radio button that displays all odd numbers
    private void rbtnOddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnOddActionPerformed
        
        txtAreaLists.setText("");                                                                       //clears the area text box to stop it from duplicating
        int [] intListOdd = new int[integerList.size()];                                                //creates new integer array for odd numbers
        
        for (int x = 0; x < integerList.size(); x++){                                                   //loops through the arrays
            if (integerList.get(x) % 2 == 1){                                                           //check if value in ArrayList is odd by seeing if modulus 2 is 1
                intListOdd[x] = integerList.get(x);                                                     //stores each odd value in the new odd integer array
                txtAreaLists.setText(txtAreaLists.getText() + Integer.toString(intListOdd[x]) + "\n");  //displays each odd number stored in the integer array in the text area box on seperate lines after converting them to strings
            }
        }
    }//GEN-LAST:event_rbtnOddActionPerformed
    //button that calculates and displays the sum of all numbers
    private void btnSumAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumAllActionPerformed
        sum = 0;                                                                                    //sets the sum to zero
        txtAreaLists.setText("");                                                                   //clears the area text box to prevent duplication
        
        for (int i = 0; i < intListPub.length; i++){                                                //loops through the public integer array
            sum += intListPub[i];                                                                   //increments the sum by each value in the array
            txtAreaLists.setText(txtAreaLists.getText() + Integer.toString(intListPub[i]) + "\n");  //displays the values used to find the sum converted into strings in the area text display
        }
        txtResult.setText("The total of all the entries is: "+sum);                                 //Displays the result in the bottom text field
    }//GEN-LAST:event_btnSumAllActionPerformed
    //button that calculates and displays sum of even numbers
    private void btnSumEvenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumEvenActionPerformed
        sum = 0;                                                                                        //sets the sum to zero
        txtAreaLists.setText("");                                                                       //clears the area text box
        
        for (int i = 0; i < intListPub.length; i++){                                                    //iterates over the public integer array
            if (intListPub[i] % 2 == 0){                                                                //checks for even numbers
                sum+= intListPub[i];                                                                    //increments the sum by the value of the number if even
                txtAreaLists.setText(txtAreaLists.getText() + Integer.toString(intListPub[i]) + "\n");  //displays the values used to find the sum converted into strings on seperate lines
            }
        }
        txtResult.setText("The total of the even entries is: "+sum);                                    //displays a message showing the result in the bottom text field
    }//GEN-LAST:event_btnSumEvenActionPerformed
    //button to calculate and display the sum of odd numbers
    private void btnSumOddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumOddActionPerformed
        sum = 0;                                                                                        //sets the sum to 0
        txtAreaLists.setText("");                                                                       //clears the area text box
        
        for (int i = 0; i < intListPub.length; i++){                                                    //loops through the public integer array
            if (intListPub[i] % 2 == 1){                                                                //checks for odd numbers in the public integer array
                sum+= intListPub[i];                                                                    //increments the sum by the odd values found in the array
                txtAreaLists.setText(txtAreaLists.getText() + Integer.toString(intListPub[i]) + "\n");  //displays the numbers used to find the sum in the area text box converted to strings
            }
        }
        txtResult.setText("The total of the odd entries is: "+sum);                                     //displays the resulting values in the bottom text field
    }//GEN-LAST:event_btnSumOddActionPerformed
    //button to clear all values and text fields
    private void btnCleaerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleaerActionPerformed
        txtInput.setText("");       //Clears the input text field
        txtResult.setText("");      //Clears the result text field
        txtAreaLists.setText("");   //Clears the area text field
        sum = 0;                    //sets the sum to zero
        intListPub = null;          //clears the public integer array
        integerList.clear();        //clears the ArrayList of integers
        
    }//GEN-LAST:event_btnCleaerActionPerformed
    //button to close the application
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0); //closes the application
    }//GEN-LAST:event_btnExitActionPerformed
    //button to tell user how to use application
    private void menuItemHowToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemHowToActionPerformed
        //Strings containing information on how to use the application
        String help1 = "1: Input value into the first text box and press 'Add'";                            
        String help2 = "2: To remove value, input into the text box and press 'Remove'";
        String help3 = "3: Choose set of numbers to display (Odd, Even, All) using radio buttons";
        String help4 = "4: Choose which set of numbers (Odd, Even, All) to sum by pressing respective button";
        String help5 = "5: Press clear button to begin new calculations or exit to close the program";
        
        JOptionPane.showMessageDialog(null, help1 + "\n" + help2 + "\n" + help3 + "\n" + help4 + "\n" + help5); //Popup displaying all of the help strings on seperate lines
    }//GEN-LAST:event_menuItemHowToActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IntegerSums.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IntegerSums.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IntegerSums.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IntegerSums.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IntegerSums().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCleaer;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSumAll;
    private javax.swing.JButton btnSumEven;
    private javax.swing.JButton btnSumOdd;
    private javax.swing.ButtonGroup grpListSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInput;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuItemHowTo;
    private javax.swing.JPanel panelInputs;
    private javax.swing.JPanel panelOutputs;
    private javax.swing.JRadioButton rbtnAll;
    private javax.swing.JRadioButton rbtnEven;
    private javax.swing.JRadioButton rbtnOdd;
    private javax.swing.JTextArea txtAreaLists;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextField txtResult;
    // End of variables declaration//GEN-END:variables
}
